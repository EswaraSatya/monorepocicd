name: Nx Smart CI

on:
  push:
    branches:
      - main
      - dev
      - staging

jobs:
  affected:
    runs-on: ubuntu-latest
    outputs:
      affected_projects: ${{ steps.affected.outputs.affected_apps }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Debug Affected Apps
        run: npx nx show projects --affected --json

      - name: Get Affected Apps
        id: affected
        run: |
          AFFECTED_APPS=$(npx nx show projects --affected --json | jq -c 'if . then . else [] end')
          echo "Affected Apps: $AFFECTED_APPS"
          echo "affected_apps=$AFFECTED_APPS" >> "$GITHUB_ENV"
          echo "affected_apps=$AFFECTED_APPS" >> "$GITHUB_OUTPUT"
          
      - name: Install dependencies
        run: npm install

      - name: Install Nx CLI & jq
        run: npm install -g nx jq



  deploy:
    needs: affected
    runs-on: ubuntu-latest
    if: ${{ needs.affected.outputs.affected_projects != 'null' && needs.affected.outputs.affected_projects != '[]' && needs.affected.outputs.affected_projects != '' }}
    strategy:
      matrix:
        app: ${{ fromJson(needs.affected.outputs.affected_projects || '[]') }}
    name: ðŸš€ Deploy ${{ matrix.app }}
    
    steps:
      - name: Deploy ${{ matrix.app }}
        run: |
          echo "Deploying ${{ matrix.app }}..."
          npx nx build ${{ matrix.app }}
