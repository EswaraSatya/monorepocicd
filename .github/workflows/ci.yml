name: Nx Smart CI

on:
  push:
    branches:
      - main
      - dev
      - staging

jobs:
  affected:
    runs-on: ubuntu-latest
    outputs:
      affected_apps: ${{ steps.affected.outputs.apps }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Nx CLI
        run: npm install -g nx jq

      - name: Print affected projects
        id: affected
        run: |
          AFFECTED=$(npx nx show projects --affected --base=origin/main --head=HEAD --json | jq -r '. | join(", ")')
          echo "Affected projects: $AFFECTED"

          # Extract only app1, app2, or dashboard from the affected projects
          FILTERED_APPS=$(echo "$AFFECTED" | tr ', ' '\n' | grep -E '^(app1|app2|dashboard)$' | jq -R -s -c 'split("\n") | map(select(. != ""))')
          
          echo "Filtered apps: $FILTERED_APPS"
          echo "apps=$FILTERED_APPS" >> $GITHUB_ENV

  deploy:
    needs: affected
    runs-on: ubuntu-latest
    if: env.apps != '[]'  # Ensures it only runs if apps are affected
    strategy:
      matrix:
        app: ${{ fromJson(env.apps) }}
    name: ðŸš€ Deploy ${{ matrix.app }}
    
    steps:
      - name: Deploy ${{ matrix.app }}
        run: |
          echo "Deploying ${{ matrix.app }}..."
          npx nx build ${{ matrix.app }}
