name: Nx Smart CI

on:
  push:
    branches:
      - main
      - dev
      - staging

jobs:
  affected:
    runs-on: ubuntu-latest
    outputs:
      affected_projects: ${{ steps.affected.outputs.apps }}    

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Print affected projects
        id: affected
        run: |
          # Get all affected files
          AFFECTED_FILES=$(git diff --name-only origin/main HEAD)

          echo "Affected files: $AFFECTED_FILES"

          # Determine which apps are affected
          AFFECTED_APPS=()
          if echo "$AFFECTED_FILES" | grep -q "^app1/"; then
            AFFECTED_APPS+=("app1")
          fi
          if echo "$AFFECTED_FILES" | grep -q "^app2/"; then
            AFFECTED_APPS+=("app2")
          fi
          if echo "$AFFECTED_FILES" | grep -q "^dashboard/"; then
            AFFECTED_APPS+=("dashboard")
          fi

          # Convert to JSON array format
          FILTERED_APPS=$(printf '%s\n' "${AFFECTED_APPS[@]}" | jq -R -s -c 'split("\n") | map(select(. != ""))')

          echo "Filtered apps: $FILTERED_APPS"
          echo "::set-output name=apps::$FILTERED_APPS"

      - name: Debug affected projects
        run: echo "Affected apps: ${{ steps.affected.outputs.apps }}"
        
      - name: Install dependencies
        run: npm install

      - name: Install Nx CLI
        run: npm install -g nx jq



  deploy:
    needs: affected
    runs-on: ubuntu-latest
    if: ${{ needs.affected.outputs.affected_projects != '[]' && needs.affected.outputs.affected_projects != '' }}
    strategy:
      matrix:
        app: ${{ fromJson(needs.affected.outputs.affected_projects) }}
    name: ðŸš€ Deploy ${{ matrix.app }}
    
    steps:
      - name: Deploy ${{ matrix.app }}
        run: |
          echo "Deploying ${{ matrix.app }}..."
          npx nx build ${{ matrix.app }}
